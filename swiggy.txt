pipeline{
    agent any
    tools{
        jdk 'jdk17'
        nodejs 'node23'
    }
    environment {
        SCANNER_HOME=tool 'sonar-scanner'
    }
    stages {
        stage('clean workspace'){
            steps{
                cleanWs()
            }
        }
        stage('Checkout from Git'){
            steps{
                git 'https://github.com/prasad234567/My-DevOps-Project-Swiggy.git'
            }
        }
        stage("Sonarqube Analysis "){
            steps{
                withSonarQubeEnv('sonar-server') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=swiggy-app \
                    -Dsonar.projectKey=swiggy-app '''
                }
            }
        }
        stage("quality gate"){
           steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token' 
                }
            } 
        }
        stage('Install Dependencies') {
            steps {
                sh "npm install"
            }
        }
        stage('OWASP FS SCAN') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        stage('TRIVY FS SCAN') {
            steps {
                sh "trivy fs . > trivyfs.txt"
            }
        }
        stage ('Docker Login'){
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-creds', passwordVariable: 'mypasswd', usernameVariable: 'usr')]) {
                 sh "docker logout"
                 sh "echo ${mypasswd} | docker login -u ${usr} --password-stdin"
                }
                
            }
        }
        stage ('Built Docker') {
            steps {
		sh "docker build -t swiggy-app ."
		sh "docker tag swiggy-app varaprasad372/swiggy-app:latest"
                
            }
        }
        stage ('Push to dockerhub') {
    		steps {
                     sh "docker push varaprasad372/swiggy-app:latest"
            }
        }	
        stage("TRIVY"){
            steps{
                sh "trivy image varaprasad372/swiggy-app:latest > trivy.txt" 
            }
        }
        stage('Deploy to container'){
            steps{
                sh 'docker run -d --name swiggy-app -p 3000:3000 varaprasad372/swiggy-app:latest'
            }
        }
    }
}